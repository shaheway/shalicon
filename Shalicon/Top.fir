circuit Top :
  module Core :
    input clock : Clock
    input reset : Reset
    output io : { flip imem : { flip inst_addr : UInt<32>, inst_o : UInt<32>}, flip wbio : { flip raddr : UInt<32>, rdata : UInt<32>, flip waddr : UInt<32>, flip wdata : UInt<32>, flip write_en : UInt<1>}, ce : UInt<1>}

    cmem registers : UInt<32> [32] @[Core.scala 13:22]
    reg pc_reg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 16:23]
    node _pc_reg_T = add(pc_reg, UInt<32>("h4")) @[Core.scala 17:20]
    node _pc_reg_T_1 = tail(_pc_reg_T, 1) @[Core.scala 17:20]
    pc_reg <= _pc_reg_T_1 @[Core.scala 17:10]
    io.imem.inst_addr <= pc_reg @[Core.scala 18:21]
    node _io_ce_T = eq(io.imem.inst_o, UInt<32>("h13136f97")) @[Core.scala 20:18]
    io.ce <= _io_ce_T @[Core.scala 20:9]
    node rs1_addr = bits(io.imem.inst_o, 19, 15) @[Core.scala 23:22]
    node rs2_addr = bits(io.imem.inst_o, 24, 20) @[Core.scala 24:22]
    node wb_addr = bits(io.imem.inst_o, 11, 7) @[Core.scala 25:21]
    node _rs1_data_T = dshr(UInt<1>("h0"), UInt<6>("h20")) @[Core.scala 26:38]
    node _rs1_data_T_1 = bits(_rs1_data_T, 0, 0) @[Core.scala 26:38]
    node _rs1_data_T_2 = neq(rs1_addr, _rs1_data_T_1) @[Core.scala 26:31]
    infer mport rs1_data_MPORT = registers[rs1_addr], clock @[Core.scala 26:61]
    node rs1_data = mux(_rs1_data_T_2, rs1_data_MPORT, UInt<32>("h0")) @[Core.scala 26:21]
    node _rs2_data_T = dshr(UInt<1>("h0"), UInt<6>("h20")) @[Core.scala 27:38]
    node _rs2_data_T_1 = bits(_rs2_data_T, 0, 0) @[Core.scala 27:38]
    node _rs2_data_T_2 = neq(rs2_addr, _rs2_data_T_1) @[Core.scala 27:31]
    infer mport rs2_data_MPORT = registers[rs2_addr], clock @[Core.scala 27:61]
    node rs2_data = mux(_rs2_data_T_2, rs2_data_MPORT, UInt<32>("h0")) @[Core.scala 27:21]
    node imm_i = bits(io.imem.inst_o, 31, 20) @[Core.scala 28:19]
    node _imm_i_sext_T = bits(imm_i, 11, 11) @[Core.scala 29:38]
    node _imm_i_sext_T_1 = bits(_imm_i_sext_T, 0, 0) @[Bitwise.scala 74:15]
    node _imm_i_sext_T_2 = mux(_imm_i_sext_T_1, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 74:12]
    node imm_i_sext = cat(_imm_i_sext_T_2, imm_i) @[Cat.scala 31:58]
    node _imm_s_T = bits(io.imem.inst_o, 31, 25) @[Core.scala 30:23]
    node _imm_s_T_1 = bits(io.imem.inst_o, 11, 7) @[Core.scala 30:37]
    node imm_s = cat(_imm_s_T, _imm_s_T_1) @[Cat.scala 31:58]
    node _imm_s_sext_T = bits(imm_s, 11, 11) @[Core.scala 31:38]
    node _imm_s_sext_T_1 = bits(_imm_s_sext_T, 0, 0) @[Bitwise.scala 74:15]
    node _imm_s_sext_T_2 = mux(_imm_s_sext_T_1, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 74:12]
    node imm_s_sext = cat(_imm_s_sext_T_2, imm_s) @[Cat.scala 31:58]
    node _alu_out_T = and(io.imem.inst_o, UInt<15>("h707f")) @[Core.scala 35:11]
    node _alu_out_T_1 = eq(UInt<14>("h2003"), _alu_out_T) @[Core.scala 35:11]
    node _alu_out_T_2 = add(rs1_data, imm_i_sext) @[Core.scala 35:32]
    node _alu_out_T_3 = tail(_alu_out_T_2, 1) @[Core.scala 35:32]
    node _alu_out_T_4 = and(io.imem.inst_o, UInt<15>("h707f")) @[Core.scala 36:11]
    node _alu_out_T_5 = eq(UInt<14>("h2023"), _alu_out_T_4) @[Core.scala 36:11]
    node _alu_out_T_6 = add(rs1_data, imm_s_sext) @[Core.scala 36:32]
    node _alu_out_T_7 = tail(_alu_out_T_6, 1) @[Core.scala 36:32]
    node _alu_out_T_8 = mux(_alu_out_T_5, _alu_out_T_7, UInt<32>("h0")) @[Mux.scala 101:16]
    node alu_out = mux(_alu_out_T_1, _alu_out_T_3, _alu_out_T_8) @[Mux.scala 101:16]
    node _io_wbio_write_en_T = and(io.imem.inst_o, UInt<15>("h707f")) @[Core.scala 41:11]
    node _io_wbio_write_en_T_1 = eq(UInt<14>("h2003"), _io_wbio_write_en_T) @[Core.scala 41:11]
    node _io_wbio_write_en_T_2 = and(io.imem.inst_o, UInt<15>("h707f")) @[Core.scala 42:11]
    node _io_wbio_write_en_T_3 = eq(UInt<14>("h2023"), _io_wbio_write_en_T_2) @[Core.scala 42:11]
    node _io_wbio_write_en_T_4 = mux(_io_wbio_write_en_T_3, UInt<1>("h1"), UInt<1>("h0")) @[Mux.scala 101:16]
    node _io_wbio_write_en_T_5 = mux(_io_wbio_write_en_T_1, UInt<1>("h0"), _io_wbio_write_en_T_4) @[Mux.scala 101:16]
    io.wbio.write_en <= _io_wbio_write_en_T_5 @[Core.scala 40:20]
    io.wbio.raddr <= alu_out @[Core.scala 44:17]
    io.wbio.waddr <= alu_out @[Core.scala 46:17]
    io.wbio.wdata <= rs2_data @[Core.scala 47:17]
    node _T = and(io.imem.inst_o, UInt<15>("h707f")) @[Core.scala 50:13]
    node _T_1 = eq(UInt<14>("h2003"), _T) @[Core.scala 50:13]
    when _T_1 : @[Core.scala 50:21]
      infer mport MPORT = registers[wb_addr], clock @[Core.scala 51:14]
      MPORT <= io.wbio.rdata @[Core.scala 51:24]

  module Memory :
    input clock : Clock
    input reset : Reset
    output io : { imem : { flip inst_addr : UInt<32>, inst_o : UInt<32>}, wbio : { flip raddr : UInt<32>, rdata : UInt<32>, flip waddr : UInt<32>, flip wdata : UInt<32>, flip write_en : UInt<1>}}

    cmem mem : UInt<8> [16384] @[Memory.scala 13:16]
    node _T = asUInt(reset) @[Memory.scala 15:14]
    when _T : @[Memory.scala 15:21]
      io.imem.inst_o <= UInt<32>("h0") @[Memory.scala 16:20]
    else :
      node _io_imem_inst_o_T = add(io.imem.inst_addr, UInt<8>("h3")) @[Memory.scala 18:49]
      node _io_imem_inst_o_T_1 = tail(_io_imem_inst_o_T, 1) @[Memory.scala 18:49]
      node _io_imem_inst_o_T_2 = bits(_io_imem_inst_o_T_1, 13, 0) @[Memory.scala 18:30]
      infer mport io_imem_inst_o_MPORT = mem[_io_imem_inst_o_T_2], clock @[Memory.scala 18:30]
      node _io_imem_inst_o_T_3 = add(io.imem.inst_addr, UInt<8>("h2")) @[Memory.scala 19:29]
      node _io_imem_inst_o_T_4 = tail(_io_imem_inst_o_T_3, 1) @[Memory.scala 19:29]
      node _io_imem_inst_o_T_5 = bits(_io_imem_inst_o_T_4, 13, 0) @[Memory.scala 19:10]
      infer mport io_imem_inst_o_MPORT_1 = mem[_io_imem_inst_o_T_5], clock @[Memory.scala 19:10]
      node _io_imem_inst_o_T_6 = add(io.imem.inst_addr, UInt<8>("h1")) @[Memory.scala 20:29]
      node _io_imem_inst_o_T_7 = tail(_io_imem_inst_o_T_6, 1) @[Memory.scala 20:29]
      node _io_imem_inst_o_T_8 = bits(_io_imem_inst_o_T_7, 13, 0) @[Memory.scala 20:10]
      infer mport io_imem_inst_o_MPORT_2 = mem[_io_imem_inst_o_T_8], clock @[Memory.scala 20:10]
      node _io_imem_inst_o_T_9 = bits(io.imem.inst_addr, 13, 0) @[Memory.scala 21:10]
      infer mport io_imem_inst_o_MPORT_3 = mem[_io_imem_inst_o_T_9], clock @[Memory.scala 21:10]
      node io_imem_inst_o_lo = cat(io_imem_inst_o_MPORT_2, io_imem_inst_o_MPORT_3) @[Cat.scala 31:58]
      node io_imem_inst_o_hi = cat(io_imem_inst_o_MPORT, io_imem_inst_o_MPORT_1) @[Cat.scala 31:58]
      node _io_imem_inst_o_T_10 = cat(io_imem_inst_o_hi, io_imem_inst_o_lo) @[Cat.scala 31:58]
      io.imem.inst_o <= _io_imem_inst_o_T_10 @[Memory.scala 18:20]
    node _io_wbio_rdata_T = add(io.wbio.raddr, UInt<8>("h3")) @[Memory.scala 24:42]
    node _io_wbio_rdata_T_1 = tail(_io_wbio_rdata_T, 1) @[Memory.scala 24:42]
    node _io_wbio_rdata_T_2 = bits(_io_wbio_rdata_T_1, 13, 0) @[Memory.scala 24:27]
    infer mport io_wbio_rdata_MPORT = mem[_io_wbio_rdata_T_2], clock @[Memory.scala 24:27]
    node _io_wbio_rdata_T_3 = add(io.wbio.raddr, UInt<8>("h2")) @[Memory.scala 25:23]
    node _io_wbio_rdata_T_4 = tail(_io_wbio_rdata_T_3, 1) @[Memory.scala 25:23]
    node _io_wbio_rdata_T_5 = bits(_io_wbio_rdata_T_4, 13, 0) @[Memory.scala 25:8]
    infer mport io_wbio_rdata_MPORT_1 = mem[_io_wbio_rdata_T_5], clock @[Memory.scala 25:8]
    node _io_wbio_rdata_T_6 = add(io.wbio.raddr, UInt<8>("h1")) @[Memory.scala 26:23]
    node _io_wbio_rdata_T_7 = tail(_io_wbio_rdata_T_6, 1) @[Memory.scala 26:23]
    node _io_wbio_rdata_T_8 = bits(_io_wbio_rdata_T_7, 13, 0) @[Memory.scala 26:8]
    infer mport io_wbio_rdata_MPORT_2 = mem[_io_wbio_rdata_T_8], clock @[Memory.scala 26:8]
    node _io_wbio_rdata_T_9 = bits(io.wbio.raddr, 13, 0) @[Memory.scala 27:8]
    infer mport io_wbio_rdata_MPORT_3 = mem[_io_wbio_rdata_T_9], clock @[Memory.scala 27:8]
    node io_wbio_rdata_lo = cat(io_wbio_rdata_MPORT_2, io_wbio_rdata_MPORT_3) @[Cat.scala 31:58]
    node io_wbio_rdata_hi = cat(io_wbio_rdata_MPORT, io_wbio_rdata_MPORT_1) @[Cat.scala 31:58]
    node _io_wbio_rdata_T_10 = cat(io_wbio_rdata_hi, io_wbio_rdata_lo) @[Cat.scala 31:58]
    io.wbio.rdata <= _io_wbio_rdata_T_10 @[Memory.scala 24:17]
    when io.wbio.write_en : @[Memory.scala 29:25]
      node _T_1 = add(io.wbio.waddr, UInt<8>("h3")) @[Memory.scala 30:23]
      node _T_2 = tail(_T_1, 1) @[Memory.scala 30:23]
      node _T_3 = bits(_T_2, 13, 0) @[Memory.scala 30:8]
      infer mport MPORT = mem[_T_3], clock @[Memory.scala 30:8]
      node _T_4 = bits(io.wbio.wdata, 31, 24) @[Memory.scala 30:51]
      MPORT <= _T_4 @[Memory.scala 30:35]
      node _T_5 = add(io.wbio.waddr, UInt<8>("h2")) @[Memory.scala 31:23]
      node _T_6 = tail(_T_5, 1) @[Memory.scala 31:23]
      node _T_7 = bits(_T_6, 13, 0) @[Memory.scala 31:8]
      infer mport MPORT_1 = mem[_T_7], clock @[Memory.scala 31:8]
      node _T_8 = bits(io.wbio.wdata, 23, 16) @[Memory.scala 31:51]
      MPORT_1 <= _T_8 @[Memory.scala 31:35]
      node _T_9 = add(io.wbio.waddr, UInt<8>("h1")) @[Memory.scala 32:23]
      node _T_10 = tail(_T_9, 1) @[Memory.scala 32:23]
      node _T_11 = bits(_T_10, 13, 0) @[Memory.scala 32:8]
      infer mport MPORT_2 = mem[_T_11], clock @[Memory.scala 32:8]
      node _T_12 = bits(io.wbio.wdata, 15, 8) @[Memory.scala 32:51]
      MPORT_2 <= _T_12 @[Memory.scala 32:35]
      node _T_13 = bits(io.wbio.waddr, 13, 0) @[Memory.scala 33:8]
      infer mport MPORT_3 = mem[_T_13], clock @[Memory.scala 33:8]
      node _T_14 = bits(io.wbio.wdata, 7, 0) @[Memory.scala 33:40]
      MPORT_3 <= _T_14 @[Memory.scala 33:24]

  module Top :
    input clock : Clock
    input reset : UInt<1>
    output io : { ce : UInt<1>}

    inst CORE of Core @[Top.scala 9:20]
    CORE.clock <= clock
    CORE.reset <= reset
    inst MEM of Memory @[Top.scala 10:19]
    MEM.clock <= clock
    MEM.reset <= reset
    CORE.io.imem <= MEM.io.imem @[Top.scala 11:16]
    CORE.io.wbio <= MEM.io.wbio @[Top.scala 12:16]
    io.ce <= CORE.io.ce @[Top.scala 13:9]

